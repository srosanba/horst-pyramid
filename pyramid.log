1                                                          The SAS System                          12:53 Wednesday, January 10, 2018

NOTE: Copyright (c) 2002-2012 by SAS Institute Inc., Cary, NC, USA. 
NOTE: SAS (r) Proprietary Software 9.4 (TS1M4) 
      Licensed to RHO INCORPORATED NODE 1-4, Site 70170299.
NOTE: This session is executing on the X64_SR12R2  platform.



NOTE: Updated analytical products:
      
      SAS/STAT 14.2
      SAS/IML 14.2

NOTE: Additional host information:

 X64_SR12R2 WIN 6.3.9600  Server

NOTE: SAS initialization used:
      real time           0.09 seconds
      cpu time            0.07 seconds
      
NOTE: Libref SASDATA successfully assigned from logical server.
NOTE: Libref STPSAMP successfully assigned from logical server.
NOTE: Libref SASTST94 successfully assigned from logical server.
NOTE: Libref SASTST94 refers to the same physical library as SASHELP.

NOTE: AUTOEXEC processing beginning; file is \\drive_i\SAS94GridConfig\Lev1\SASAppPGRD94\appserver_autoexec.sas.


NOTE: AUTOEXEC processing completed.

1          options mprint;
2          
3          %let path = H:\GitHub\srosanba\pyramid;
4          
5          
6          %macro pyramid(goal=);
7          
8             proc format;
9                value pyr10c
10                  1 = "9"
11                  2 = "10a"
12                  3 = "10b"
13                  4 = "10c"
14                  ;
15               value pyr10d
16                  1 = "10a"
17                  2 = "10b"
18                  3 = "10c"
19                  4 = "10d"
20                  ;
21               value pyr11a
22                  1 = "10b"
23                  2 = "10c"
24                  3 = "10d"
25                  4 = "11a"
26                  ;
27               value pyr11b
28                  1 = "10c"
2                                                          The SAS System                          12:53 Wednesday, January 10, 2018

29                  2 = "10d"
30                  3 = "11a"
31                  4 = "11b"
32                  ;
33               value pyr11c
34                  1 = "10d"
35                  2 = "11a"
36                  3 = "11b"
37                  4 = "11c"
38                  ;
39               value pyr11d
40                  1 = "11a"
41                  2 = "11b"
42                  3 = "11c"
43                  4 = "11d"
44                  ;
45               value pyr12a
46                  1 = "11b"
47                  2 = "11c"
48                  3 = "11d"
49                  4 = "12a"
50                  ;
51            run;
52         
53         
54            *--- generate pyramid outline ---;
55            data outline;
56               y = 1;
57               do xo = -3.5 to 3.5;
58                  output;
59               end;
60               y = 2;
61               do xo = -1.5 to 1.5;
62                  output;
63               end;
64               y = 3;
65               do xo = -0.5 to 0.5;
66                  output;
67               end;
68               y = 4;
69               xo = 0;
70               output;
71               format y pyr&goal..;
72            run;
73         
74         
75            *--- import tick list ---;
76            proc import
77                  datafile="&path/ticks.csv"
78                  out=tickimport
79                  dbms=csv
80                  replace
81                  ;
82            run;
83         
84         
85            *-- count ticks at each grade ---;
86            proc sql;
3                                                          The SAS System                          12:53 Wednesday, January 10, 2018

87               create   table grades as
88               select   distinct y
89               from     outline
90               ;
91               create   table tickplot0 as
92               select   y
93               from     tickimport as ti
94                        left join grades as g
95                        on ti.grade = put(g.y,pyr&goal..)
96               order by y
97               ;
98               create   table tickplot1 as
99               select   y, count(*) as count
100              from     tickplot0
101              group by y
102              ;
103           quit;
104        
105        
106           *--- add rows for grades not present ---;
107           data tickplot2;
108              merge grades tickplot1;
109              by y;
110              if missing(count) then
111                 count = 0;
112           run;
113        
114           proc sort data=tickplot2;
115              by descending y;
116           run;
117        
118        
119           *--- relocate over-climbed grades ---;
120           data tickplot3;
121              set tickplot2;
122              retain carry 0;
123              if y = 4 then do;
124                 if count > 1 then do;
125                    carry = count - 1;
126                    count = 1;
127                 end;
128              end;
129              else if y = 3 then do;
130                 count = count + carry;
131                 if count > 2 then do;
132                    carry = count - 2;
133                    count = 2;
134                 end;
135              end;
136              else if y = 2 then do;
137                 count = count + carry;
138                 if count > 4 then do;
139                    carry = count - 4;
140                    count = 4;
141                 end;
142              end;
143              else if y = 1 then do;
144                 count = count + carry;
4                                                          The SAS System                          12:53 Wednesday, January 10, 2018

145                 if count > 8 then do;
146                    carry = count - 8;
147                    count = 8;
148                 end;
149              end;
150           run;
151        
152        
153           *--- place ticks over outline ---;
154           data tickplot4;
155              set tickplot3;
156              if count > 0 then do;
157                 if mod(count,2) = 0 then do;
158                    start = -1*count/2 + 0.5;
159                    end = -1*start;
160                 end;
161                 else if mod(count,2) = 1 then do;
162                    start = -1*count/2;
163                    end = -1*start - 1;
164                 end;
165                 if y = 4 then do;
166                    start = 0;
167                    end = 0;
168                 end;
169                 do xt = start to end;
170                    output;
171                 end;
172              end;
173           run;
174        
175        
176           *--- plot outline and ticks ---;
177           data plotdata;
178              set outline tickplot4;
179           run;
180        
181           ods graphics / reset=all width=6in height=2.75in;
182           ods listing gpath = "&path";
183           ods graphics / imagename = "pyr&goal";
184        
185           proc sgplot data=plotdata noautolegend;
186              scatter x=xo y=y / markerattrs=(symbol=square size=50);
187              scatter x=xt y=y / markerattrs=(symbol=squarefilled size=40 color=green);
188              yaxis display=(nolabel) integer;
189              xaxis display=none;
190           run;
191        
192        %mend pyramid;
193        
194        ods pdf file="&path/pyramids.pdf" startpage=never;
NOTE: Writing ODS PDF output to DISK destination "H:\GitHub\srosanba\pyramid\pyramids.pdf", printer "PDF".
195        %pyramid(goal=10d)
MPRINT(PYRAMID):   proc format;
MPRINT(PYRAMID):   value pyr10c 1 = "9" 2 = "10a" 3 = "10b" 4 = "10c" ;
NOTE: Format PYR10C has been output.
MPRINT(PYRAMID):   value pyr10d 1 = "10a" 2 = "10b" 3 = "10c" 4 = "10d" ;
NOTE: Format PYR10D has been output.
MPRINT(PYRAMID):   value pyr11a 1 = "10b" 2 = "10c" 3 = "10d" 4 = "11a" ;
5                                                          The SAS System                          12:53 Wednesday, January 10, 2018

NOTE: Format PYR11A has been output.
MPRINT(PYRAMID):   value pyr11b 1 = "10c" 2 = "10d" 3 = "11a" 4 = "11b" ;
NOTE: Format PYR11B has been output.
MPRINT(PYRAMID):   value pyr11c 1 = "10d" 2 = "11a" 3 = "11b" 4 = "11c" ;
NOTE: Format PYR11C has been output.
MPRINT(PYRAMID):   value pyr11d 1 = "11a" 2 = "11b" 3 = "11c" 4 = "11d" ;
NOTE: Format PYR11D has been output.
MPRINT(PYRAMID):   value pyr12a 1 = "11b" 2 = "11c" 3 = "11d" 4 = "12a" ;
NOTE: Format PYR12A has been output.
MPRINT(PYRAMID):   run;

NOTE: PROCEDURE FORMAT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(PYRAMID):   *--- generate pyramid outline ---;
MPRINT(PYRAMID):   data outline;
MPRINT(PYRAMID):   y = 1;
MPRINT(PYRAMID):   do xo = -3.5 to 3.5;
MPRINT(PYRAMID):   output;
MPRINT(PYRAMID):   end;
MPRINT(PYRAMID):   y = 2;
MPRINT(PYRAMID):   do xo = -1.5 to 1.5;
MPRINT(PYRAMID):   output;
MPRINT(PYRAMID):   end;
MPRINT(PYRAMID):   y = 3;
MPRINT(PYRAMID):   do xo = -0.5 to 0.5;
MPRINT(PYRAMID):   output;
MPRINT(PYRAMID):   end;
MPRINT(PYRAMID):   y = 4;
MPRINT(PYRAMID):   xo = 0;
MPRINT(PYRAMID):   output;
MPRINT(PYRAMID):   format y pyr10d.;
MPRINT(PYRAMID):   run;

NOTE: The data set WORK.OUTLINE has 15 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(PYRAMID):   *--- import tick list ---;
MPRINT(PYRAMID):   proc import datafile="H:\GitHub\srosanba\pyramid/ticks.csv" out=tickimport dbms=csv replace ;
MPRINT(PYRAMID):   ADLM;
MPRINT(PYRAMID):   run;

NOTE: Unable to open parameter catalog: SASUSER.PARMS.PARMS.SLIST in update mode. Temporary parameter values will be saved to 
WORK.PARMS.PARMS.SLIST.
196         /**********************************************************************
197         *   PRODUCT:   SAS
198         *   VERSION:   9.4
199         *   CREATOR:   External File Interface
200         *   DATE:      10JAN18
201         *   DESC:      Generated SAS Datastep Code
202         *   TEMPLATE SOURCE:  (None Specified.)
203         ***********************************************************************/
204            data WORK.TICKIMPORT    ;
6                                                          The SAS System                          12:53 Wednesday, January 10, 2018

MPRINT(PYRAMID):   data WORK.TICKIMPORT ;
205            %let _EFIERR_ = 0; /* set the ERROR detection macro variable */
206            infile 'H:\GitHub\srosanba\pyramid/ticks.csv' delimiter = ',' MISSOVER DSD lrecl=32767 firstobs=2 ;
MPRINT(PYRAMID):   infile 'H:\GitHub\srosanba\pyramid/ticks.csv' delimiter = ',' MISSOVER DSD lrecl=32767 firstobs=2 ;
207               informat date yymmdd10. ;
MPRINT(PYRAMID):   informat date yymmdd10. ;
208               informat grade $3. ;
MPRINT(PYRAMID):   informat grade $3. ;
209               format date yymmdd10. ;
MPRINT(PYRAMID):   format date yymmdd10. ;
210               format grade $3. ;
MPRINT(PYRAMID):   format grade $3. ;
211            input
212                        date
213                        grade $
214            ;
MPRINT(PYRAMID):   input date grade $ ;
215            if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */
MPRINT(PYRAMID):   if _ERROR_ then call symputx('_EFIERR_',1);
216            run;
MPRINT(PYRAMID):   run;

NOTE: The infile 'H:\GitHub\srosanba\pyramid/ticks.csv' is:
      Filename=H:\GitHub\srosanba\pyramid\ticks.csv,
      RECFM=V,LRECL=32767,File Size (bytes)=268,
      Last Modified=10Jan2018:09:42:53,
      Create Time=10Jan2018:09:42:53

NOTE: 16 records were read from the infile 'H:\GitHub\srosanba\pyramid/ticks.csv'.
      The minimum record length was 14.
      The maximum record length was 14.
NOTE: The data set WORK.TICKIMPORT has 16 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

16 rows created in WORK.TICKIMPORT from H:\GitHub\srosanba\pyramid/ticks.csv.
  
  
  
NOTE: WORK.TICKIMPORT data set was successfully created.
NOTE: The data set WORK.TICKIMPORT has 16 observations and 2 variables.
NOTE: PROCEDURE IMPORT used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
      

MPRINT(PYRAMID):    ;
MPRINT(PYRAMID):   *-- count ticks at each grade ---;
MPRINT(PYRAMID):   proc sql;
MPRINT(PYRAMID):   create table grades as select distinct y from outline ;
NOTE: Table WORK.GRADES created, with 4 rows and 1 columns.

MPRINT(PYRAMID):   create table tickplot0 as select y from tickimport as ti left join grades as g on ti.grade = put(g.y,pyr10d.) 
order by y ;
NOTE: Table WORK.TICKPLOT0 created, with 16 rows and 1 columns.

7                                                          The SAS System                          12:53 Wednesday, January 10, 2018

MPRINT(PYRAMID):   create table tickplot1 as select y, count(*) as count from tickplot0 group by y ;
NOTE: Table WORK.TICKPLOT1 created, with 3 rows and 2 columns.

MPRINT(PYRAMID):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(PYRAMID):   *--- add rows for grades not present ---;
MPRINT(PYRAMID):   data tickplot2;
MPRINT(PYRAMID):   merge grades tickplot1;
MPRINT(PYRAMID):   by y;
MPRINT(PYRAMID):   if missing(count) then count = 0;
MPRINT(PYRAMID):   run;

NOTE: There were 4 observations read from the data set WORK.GRADES.
NOTE: There were 3 observations read from the data set WORK.TICKPLOT1.
NOTE: The data set WORK.TICKPLOT2 has 4 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(PYRAMID):   proc sort data=tickplot2;
MPRINT(PYRAMID):   by descending y;
MPRINT(PYRAMID):   run;

NOTE: There were 4 observations read from the data set WORK.TICKPLOT2.
NOTE: The data set WORK.TICKPLOT2 has 4 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(PYRAMID):   *--- relocate over-climbed grades ---;
MPRINT(PYRAMID):   data tickplot3;
MPRINT(PYRAMID):   set tickplot2;
MPRINT(PYRAMID):   retain carry 0;
MPRINT(PYRAMID):   if y = 4 then do;
MPRINT(PYRAMID):   if count > 1 then do;
MPRINT(PYRAMID):   carry = count - 1;
MPRINT(PYRAMID):   count = 1;
MPRINT(PYRAMID):   end;
MPRINT(PYRAMID):   end;
MPRINT(PYRAMID):   else if y = 3 then do;
MPRINT(PYRAMID):   count = count + carry;
MPRINT(PYRAMID):   if count > 2 then do;
MPRINT(PYRAMID):   carry = count - 2;
MPRINT(PYRAMID):   count = 2;
MPRINT(PYRAMID):   end;
MPRINT(PYRAMID):   end;
MPRINT(PYRAMID):   else if y = 2 then do;
MPRINT(PYRAMID):   count = count + carry;
MPRINT(PYRAMID):   if count > 4 then do;
MPRINT(PYRAMID):   carry = count - 4;
MPRINT(PYRAMID):   count = 4;
MPRINT(PYRAMID):   end;
8                                                          The SAS System                          12:53 Wednesday, January 10, 2018

MPRINT(PYRAMID):   end;
MPRINT(PYRAMID):   else if y = 1 then do;
MPRINT(PYRAMID):   count = count + carry;
MPRINT(PYRAMID):   if count > 8 then do;
MPRINT(PYRAMID):   carry = count - 8;
MPRINT(PYRAMID):   count = 8;
MPRINT(PYRAMID):   end;
MPRINT(PYRAMID):   end;
MPRINT(PYRAMID):   run;

NOTE: There were 4 observations read from the data set WORK.TICKPLOT2.
NOTE: The data set WORK.TICKPLOT3 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(PYRAMID):   *--- place ticks over outline ---;
MPRINT(PYRAMID):   data tickplot4;
MPRINT(PYRAMID):   set tickplot3;
MPRINT(PYRAMID):   if count > 0 then do;
MPRINT(PYRAMID):   if mod(count,2) = 0 then do;
MPRINT(PYRAMID):   start = -1*count/2 + 0.5;
MPRINT(PYRAMID):   end = -1*start;
MPRINT(PYRAMID):   end;
MPRINT(PYRAMID):   else if mod(count,2) = 1 then do;
MPRINT(PYRAMID):   start = -1*count/2;
MPRINT(PYRAMID):   end = -1*start - 1;
MPRINT(PYRAMID):   end;
MPRINT(PYRAMID):   if y = 4 then do;
MPRINT(PYRAMID):   start = 0;
MPRINT(PYRAMID):   end = 0;
MPRINT(PYRAMID):   end;
MPRINT(PYRAMID):   do xt = start to end;
MPRINT(PYRAMID):   output;
MPRINT(PYRAMID):   end;
MPRINT(PYRAMID):   end;
MPRINT(PYRAMID):   run;

NOTE: There were 4 observations read from the data set WORK.TICKPLOT3.
NOTE: The data set WORK.TICKPLOT4 has 14 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(PYRAMID):   *--- plot outline and ticks ---;
MPRINT(PYRAMID):   data plotdata;
MPRINT(PYRAMID):   set outline tickplot4;
MPRINT(PYRAMID):   run;

NOTE: There were 15 observations read from the data set WORK.OUTLINE.
NOTE: There were 14 observations read from the data set WORK.TICKPLOT4.
NOTE: The data set WORK.PLOTDATA has 29 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      
9                                                          The SAS System                          12:53 Wednesday, January 10, 2018


MPRINT(PYRAMID):   ods graphics / reset=all width=6in height=2.75in;
MPRINT(PYRAMID):   ods listing gpath = "H:\GitHub\srosanba\pyramid";
MPRINT(PYRAMID):   ods graphics / imagename = "pyr10d";
MPRINT(PYRAMID):   proc sgplot data=plotdata noautolegend;
MPRINT(PYRAMID):   scatter x=xo y=y / markerattrs=(symbol=square size=50);
MPRINT(PYRAMID):   scatter x=xt y=y / markerattrs=(symbol=squarefilled size=40 color=green);
MPRINT(PYRAMID):   yaxis display=(nolabel) integer;
MPRINT(PYRAMID):   xaxis display=none;
MPRINT(PYRAMID):   run;

NOTE: PROCEDURE SGPLOT used (Total process time):
      real time           2.10 seconds
      cpu time            0.10 seconds
      
NOTE: Listing image output written to H:\GitHub\srosanba\pyramid\pyr10d.png.
NOTE: There were 29 observations read from the data set WORK.PLOTDATA.

217        %pyramid(goal=11a)
MPRINT(PYRAMID):   proc format;
MPRINT(PYRAMID):   value pyr10c 1 = "9" 2 = "10a" 3 = "10b" 4 = "10c" ;
NOTE: Format PYR10C is already on the library WORK.FORMATS.
NOTE: Format PYR10C has been output.
MPRINT(PYRAMID):   value pyr10d 1 = "10a" 2 = "10b" 3 = "10c" 4 = "10d" ;
NOTE: Format PYR10D is already on the library WORK.FORMATS.
NOTE: Format PYR10D has been output.
MPRINT(PYRAMID):   value pyr11a 1 = "10b" 2 = "10c" 3 = "10d" 4 = "11a" ;
NOTE: Format PYR11A is already on the library WORK.FORMATS.
NOTE: Format PYR11A has been output.
MPRINT(PYRAMID):   value pyr11b 1 = "10c" 2 = "10d" 3 = "11a" 4 = "11b" ;
NOTE: Format PYR11B is already on the library WORK.FORMATS.
NOTE: Format PYR11B has been output.
MPRINT(PYRAMID):   value pyr11c 1 = "10d" 2 = "11a" 3 = "11b" 4 = "11c" ;
NOTE: Format PYR11C is already on the library WORK.FORMATS.
NOTE: Format PYR11C has been output.
MPRINT(PYRAMID):   value pyr11d 1 = "11a" 2 = "11b" 3 = "11c" 4 = "11d" ;
NOTE: Format PYR11D is already on the library WORK.FORMATS.
NOTE: Format PYR11D has been output.
MPRINT(PYRAMID):   value pyr12a 1 = "11b" 2 = "11c" 3 = "11d" 4 = "12a" ;
NOTE: Format PYR12A is already on the library WORK.FORMATS.
NOTE: Format PYR12A has been output.
MPRINT(PYRAMID):   run;

NOTE: PROCEDURE FORMAT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(PYRAMID):   *--- generate pyramid outline ---;
MPRINT(PYRAMID):   data outline;
MPRINT(PYRAMID):   y = 1;
MPRINT(PYRAMID):   do xo = -3.5 to 3.5;
MPRINT(PYRAMID):   output;
MPRINT(PYRAMID):   end;
MPRINT(PYRAMID):   y = 2;
MPRINT(PYRAMID):   do xo = -1.5 to 1.5;
MPRINT(PYRAMID):   output;
MPRINT(PYRAMID):   end;
10                                                         The SAS System                          12:53 Wednesday, January 10, 2018

MPRINT(PYRAMID):   y = 3;
MPRINT(PYRAMID):   do xo = -0.5 to 0.5;
MPRINT(PYRAMID):   output;
MPRINT(PYRAMID):   end;
MPRINT(PYRAMID):   y = 4;
MPRINT(PYRAMID):   xo = 0;
MPRINT(PYRAMID):   output;
MPRINT(PYRAMID):   format y pyr11a.;
MPRINT(PYRAMID):   run;

NOTE: The data set WORK.OUTLINE has 15 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(PYRAMID):   *--- import tick list ---;
MPRINT(PYRAMID):   proc import datafile="H:\GitHub\srosanba\pyramid/ticks.csv" out=tickimport dbms=csv replace ;
MPRINT(PYRAMID):   ADLM;
MPRINT(PYRAMID):   run;

NOTE: Unable to open parameter catalog: SASUSER.PARMS.PARMS.SLIST in update mode. Temporary parameter values will be saved to 
WORK.PARMS.PARMS.SLIST.
218         /**********************************************************************
219         *   PRODUCT:   SAS
220         *   VERSION:   9.4
221         *   CREATOR:   External File Interface
222         *   DATE:      10JAN18
223         *   DESC:      Generated SAS Datastep Code
224         *   TEMPLATE SOURCE:  (None Specified.)
225         ***********************************************************************/
226            data WORK.TICKIMPORT    ;
MPRINT(PYRAMID):   data WORK.TICKIMPORT ;
227            %let _EFIERR_ = 0; /* set the ERROR detection macro variable */
228            infile 'H:\GitHub\srosanba\pyramid/ticks.csv' delimiter = ',' MISSOVER DSD lrecl=32767 firstobs=2 ;
MPRINT(PYRAMID):   infile 'H:\GitHub\srosanba\pyramid/ticks.csv' delimiter = ',' MISSOVER DSD lrecl=32767 firstobs=2 ;
229               informat date yymmdd10. ;
MPRINT(PYRAMID):   informat date yymmdd10. ;
230               informat grade $3. ;
MPRINT(PYRAMID):   informat grade $3. ;
231               format date yymmdd10. ;
MPRINT(PYRAMID):   format date yymmdd10. ;
232               format grade $3. ;
MPRINT(PYRAMID):   format grade $3. ;
233            input
234                        date
235                        grade $
236            ;
MPRINT(PYRAMID):   input date grade $ ;
237            if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */
MPRINT(PYRAMID):   if _ERROR_ then call symputx('_EFIERR_',1);
238            run;
MPRINT(PYRAMID):   run;

NOTE: The infile 'H:\GitHub\srosanba\pyramid/ticks.csv' is:
      Filename=H:\GitHub\srosanba\pyramid\ticks.csv,
      RECFM=V,LRECL=32767,File Size (bytes)=268,
      Last Modified=10Jan2018:09:42:53,
11                                                         The SAS System                          12:53 Wednesday, January 10, 2018

      Create Time=10Jan2018:09:42:53

NOTE: 16 records were read from the infile 'H:\GitHub\srosanba\pyramid/ticks.csv'.
      The minimum record length was 14.
      The maximum record length was 14.
NOTE: The data set WORK.TICKIMPORT has 16 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

16 rows created in WORK.TICKIMPORT from H:\GitHub\srosanba\pyramid/ticks.csv.
  
  
  
NOTE: WORK.TICKIMPORT data set was successfully created.
NOTE: The data set WORK.TICKIMPORT has 16 observations and 2 variables.
NOTE: PROCEDURE IMPORT used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      

MPRINT(PYRAMID):    ;
MPRINT(PYRAMID):   *-- count ticks at each grade ---;
MPRINT(PYRAMID):   proc sql;
MPRINT(PYRAMID):   create table grades as select distinct y from outline ;
NOTE: Table WORK.GRADES created, with 4 rows and 1 columns.

MPRINT(PYRAMID):   create table tickplot0 as select y from tickimport as ti left join grades as g on ti.grade = put(g.y,pyr11a.) 
order by y ;
NOTE: Table WORK.TICKPLOT0 created, with 16 rows and 1 columns.

MPRINT(PYRAMID):   create table tickplot1 as select y, count(*) as count from tickplot0 group by y ;
NOTE: Table WORK.TICKPLOT1 created, with 3 rows and 2 columns.

MPRINT(PYRAMID):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(PYRAMID):   *--- add rows for grades not present ---;
MPRINT(PYRAMID):   data tickplot2;
MPRINT(PYRAMID):   merge grades tickplot1;
MPRINT(PYRAMID):   by y;
MPRINT(PYRAMID):   if missing(count) then count = 0;
MPRINT(PYRAMID):   run;

NOTE: There were 4 observations read from the data set WORK.GRADES.
NOTE: There were 3 observations read from the data set WORK.TICKPLOT1.
NOTE: The data set WORK.TICKPLOT2 has 5 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(PYRAMID):   proc sort data=tickplot2;
MPRINT(PYRAMID):   by descending y;
12                                                         The SAS System                          12:53 Wednesday, January 10, 2018

MPRINT(PYRAMID):   run;

NOTE: There were 5 observations read from the data set WORK.TICKPLOT2.
NOTE: The data set WORK.TICKPLOT2 has 5 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(PYRAMID):   *--- relocate over-climbed grades ---;
MPRINT(PYRAMID):   data tickplot3;
MPRINT(PYRAMID):   set tickplot2;
MPRINT(PYRAMID):   retain carry 0;
MPRINT(PYRAMID):   if y = 4 then do;
MPRINT(PYRAMID):   if count > 1 then do;
MPRINT(PYRAMID):   carry = count - 1;
MPRINT(PYRAMID):   count = 1;
MPRINT(PYRAMID):   end;
MPRINT(PYRAMID):   end;
MPRINT(PYRAMID):   else if y = 3 then do;
MPRINT(PYRAMID):   count = count + carry;
MPRINT(PYRAMID):   if count > 2 then do;
MPRINT(PYRAMID):   carry = count - 2;
MPRINT(PYRAMID):   count = 2;
MPRINT(PYRAMID):   end;
MPRINT(PYRAMID):   end;
MPRINT(PYRAMID):   else if y = 2 then do;
MPRINT(PYRAMID):   count = count + carry;
MPRINT(PYRAMID):   if count > 4 then do;
MPRINT(PYRAMID):   carry = count - 4;
MPRINT(PYRAMID):   count = 4;
MPRINT(PYRAMID):   end;
MPRINT(PYRAMID):   end;
MPRINT(PYRAMID):   else if y = 1 then do;
MPRINT(PYRAMID):   count = count + carry;
MPRINT(PYRAMID):   if count > 8 then do;
MPRINT(PYRAMID):   carry = count - 8;
MPRINT(PYRAMID):   count = 8;
MPRINT(PYRAMID):   end;
MPRINT(PYRAMID):   end;
MPRINT(PYRAMID):   run;

NOTE: There were 5 observations read from the data set WORK.TICKPLOT2.
NOTE: The data set WORK.TICKPLOT3 has 5 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(PYRAMID):   *--- place ticks over outline ---;
MPRINT(PYRAMID):   data tickplot4;
MPRINT(PYRAMID):   set tickplot3;
MPRINT(PYRAMID):   if count > 0 then do;
MPRINT(PYRAMID):   if mod(count,2) = 0 then do;
MPRINT(PYRAMID):   start = -1*count/2 + 0.5;
MPRINT(PYRAMID):   end = -1*start;
MPRINT(PYRAMID):   end;
MPRINT(PYRAMID):   else if mod(count,2) = 1 then do;
13                                                         The SAS System                          12:53 Wednesday, January 10, 2018

MPRINT(PYRAMID):   start = -1*count/2;
MPRINT(PYRAMID):   end = -1*start - 1;
MPRINT(PYRAMID):   end;
MPRINT(PYRAMID):   if y = 4 then do;
MPRINT(PYRAMID):   start = 0;
MPRINT(PYRAMID):   end = 0;
MPRINT(PYRAMID):   end;
MPRINT(PYRAMID):   do xt = start to end;
MPRINT(PYRAMID):   output;
MPRINT(PYRAMID):   end;
MPRINT(PYRAMID):   end;
MPRINT(PYRAMID):   run;

NOTE: There were 5 observations read from the data set WORK.TICKPLOT3.
NOTE: The data set WORK.TICKPLOT4 has 14 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(PYRAMID):   *--- plot outline and ticks ---;
MPRINT(PYRAMID):   data plotdata;
MPRINT(PYRAMID):   set outline tickplot4;
MPRINT(PYRAMID):   run;

NOTE: There were 15 observations read from the data set WORK.OUTLINE.
NOTE: There were 14 observations read from the data set WORK.TICKPLOT4.
NOTE: The data set WORK.PLOTDATA has 29 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(PYRAMID):   ods graphics / reset=all width=6in height=2.75in;
MPRINT(PYRAMID):   ods listing gpath = "H:\GitHub\srosanba\pyramid";
MPRINT(PYRAMID):   ods graphics / imagename = "pyr11a";
MPRINT(PYRAMID):   proc sgplot data=plotdata noautolegend;
MPRINT(PYRAMID):   scatter x=xo y=y / markerattrs=(symbol=square size=50);
MPRINT(PYRAMID):   scatter x=xt y=y / markerattrs=(symbol=squarefilled size=40 color=green);
MPRINT(PYRAMID):   yaxis display=(nolabel) integer;
MPRINT(PYRAMID):   xaxis display=none;
MPRINT(PYRAMID):   run;

NOTE: PROCEDURE SGPLOT used (Total process time):
      real time           0.28 seconds
      cpu time            0.06 seconds
      
NOTE: Listing image output written to H:\GitHub\srosanba\pyramid\pyr11a.png.
NOTE: There were 29 observations read from the data set WORK.PLOTDATA.

239        %pyramid(goal=11b)
MPRINT(PYRAMID):   proc format;
MPRINT(PYRAMID):   value pyr10c 1 = "9" 2 = "10a" 3 = "10b" 4 = "10c" ;
NOTE: Format PYR10C is already on the library WORK.FORMATS.
NOTE: Format PYR10C has been output.
MPRINT(PYRAMID):   value pyr10d 1 = "10a" 2 = "10b" 3 = "10c" 4 = "10d" ;
NOTE: Format PYR10D is already on the library WORK.FORMATS.
NOTE: Format PYR10D has been output.
14                                                         The SAS System                          12:53 Wednesday, January 10, 2018

MPRINT(PYRAMID):   value pyr11a 1 = "10b" 2 = "10c" 3 = "10d" 4 = "11a" ;
NOTE: Format PYR11A is already on the library WORK.FORMATS.
NOTE: Format PYR11A has been output.
MPRINT(PYRAMID):   value pyr11b 1 = "10c" 2 = "10d" 3 = "11a" 4 = "11b" ;
NOTE: Format PYR11B is already on the library WORK.FORMATS.
NOTE: Format PYR11B has been output.
MPRINT(PYRAMID):   value pyr11c 1 = "10d" 2 = "11a" 3 = "11b" 4 = "11c" ;
NOTE: Format PYR11C is already on the library WORK.FORMATS.
NOTE: Format PYR11C has been output.
MPRINT(PYRAMID):   value pyr11d 1 = "11a" 2 = "11b" 3 = "11c" 4 = "11d" ;
NOTE: Format PYR11D is already on the library WORK.FORMATS.
NOTE: Format PYR11D has been output.
MPRINT(PYRAMID):   value pyr12a 1 = "11b" 2 = "11c" 3 = "11d" 4 = "12a" ;
NOTE: Format PYR12A is already on the library WORK.FORMATS.
NOTE: Format PYR12A has been output.
MPRINT(PYRAMID):   run;

NOTE: PROCEDURE FORMAT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(PYRAMID):   *--- generate pyramid outline ---;
MPRINT(PYRAMID):   data outline;
MPRINT(PYRAMID):   y = 1;
MPRINT(PYRAMID):   do xo = -3.5 to 3.5;
MPRINT(PYRAMID):   output;
MPRINT(PYRAMID):   end;
MPRINT(PYRAMID):   y = 2;
MPRINT(PYRAMID):   do xo = -1.5 to 1.5;
MPRINT(PYRAMID):   output;
MPRINT(PYRAMID):   end;
MPRINT(PYRAMID):   y = 3;
MPRINT(PYRAMID):   do xo = -0.5 to 0.5;
MPRINT(PYRAMID):   output;
MPRINT(PYRAMID):   end;
MPRINT(PYRAMID):   y = 4;
MPRINT(PYRAMID):   xo = 0;
MPRINT(PYRAMID):   output;
MPRINT(PYRAMID):   format y pyr11b.;
MPRINT(PYRAMID):   run;

NOTE: The data set WORK.OUTLINE has 15 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(PYRAMID):   *--- import tick list ---;
MPRINT(PYRAMID):   proc import datafile="H:\GitHub\srosanba\pyramid/ticks.csv" out=tickimport dbms=csv replace ;
MPRINT(PYRAMID):   ADLM;
MPRINT(PYRAMID):   run;

NOTE: Unable to open parameter catalog: SASUSER.PARMS.PARMS.SLIST in update mode. Temporary parameter values will be saved to 
WORK.PARMS.PARMS.SLIST.
240         /**********************************************************************
241         *   PRODUCT:   SAS
242         *   VERSION:   9.4
15                                                         The SAS System                          12:53 Wednesday, January 10, 2018

243         *   CREATOR:   External File Interface
244         *   DATE:      10JAN18
245         *   DESC:      Generated SAS Datastep Code
246         *   TEMPLATE SOURCE:  (None Specified.)
247         ***********************************************************************/
248            data WORK.TICKIMPORT    ;
MPRINT(PYRAMID):   data WORK.TICKIMPORT ;
249            %let _EFIERR_ = 0; /* set the ERROR detection macro variable */
250            infile 'H:\GitHub\srosanba\pyramid/ticks.csv' delimiter = ',' MISSOVER DSD lrecl=32767 firstobs=2 ;
MPRINT(PYRAMID):   infile 'H:\GitHub\srosanba\pyramid/ticks.csv' delimiter = ',' MISSOVER DSD lrecl=32767 firstobs=2 ;
251               informat date yymmdd10. ;
MPRINT(PYRAMID):   informat date yymmdd10. ;
252               informat grade $3. ;
MPRINT(PYRAMID):   informat grade $3. ;
253               format date yymmdd10. ;
MPRINT(PYRAMID):   format date yymmdd10. ;
254               format grade $3. ;
MPRINT(PYRAMID):   format grade $3. ;
255            input
256                        date
257                        grade $
258            ;
MPRINT(PYRAMID):   input date grade $ ;
259            if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */
MPRINT(PYRAMID):   if _ERROR_ then call symputx('_EFIERR_',1);
260            run;
MPRINT(PYRAMID):   run;

NOTE: The infile 'H:\GitHub\srosanba\pyramid/ticks.csv' is:
      Filename=H:\GitHub\srosanba\pyramid\ticks.csv,
      RECFM=V,LRECL=32767,File Size (bytes)=268,
      Last Modified=10Jan2018:09:42:53,
      Create Time=10Jan2018:09:42:53

NOTE: 16 records were read from the infile 'H:\GitHub\srosanba\pyramid/ticks.csv'.
      The minimum record length was 14.
      The maximum record length was 14.
NOTE: The data set WORK.TICKIMPORT has 16 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

16 rows created in WORK.TICKIMPORT from H:\GitHub\srosanba\pyramid/ticks.csv.
  
  
  
NOTE: WORK.TICKIMPORT data set was successfully created.
NOTE: The data set WORK.TICKIMPORT has 16 observations and 2 variables.
NOTE: PROCEDURE IMPORT used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      

MPRINT(PYRAMID):    ;
MPRINT(PYRAMID):   *-- count ticks at each grade ---;
MPRINT(PYRAMID):   proc sql;
MPRINT(PYRAMID):   create table grades as select distinct y from outline ;
16                                                         The SAS System                          12:53 Wednesday, January 10, 2018

NOTE: Table WORK.GRADES created, with 4 rows and 1 columns.

MPRINT(PYRAMID):   create table tickplot0 as select y from tickimport as ti left join grades as g on ti.grade = put(g.y,pyr11b.) 
order by y ;
NOTE: Table WORK.TICKPLOT0 created, with 16 rows and 1 columns.

MPRINT(PYRAMID):   create table tickplot1 as select y, count(*) as count from tickplot0 group by y ;
NOTE: Table WORK.TICKPLOT1 created, with 2 rows and 2 columns.

MPRINT(PYRAMID):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(PYRAMID):   *--- add rows for grades not present ---;
MPRINT(PYRAMID):   data tickplot2;
MPRINT(PYRAMID):   merge grades tickplot1;
MPRINT(PYRAMID):   by y;
MPRINT(PYRAMID):   if missing(count) then count = 0;
MPRINT(PYRAMID):   run;

NOTE: There were 4 observations read from the data set WORK.GRADES.
NOTE: There were 2 observations read from the data set WORK.TICKPLOT1.
NOTE: The data set WORK.TICKPLOT2 has 5 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(PYRAMID):   proc sort data=tickplot2;
MPRINT(PYRAMID):   by descending y;
MPRINT(PYRAMID):   run;

NOTE: There were 5 observations read from the data set WORK.TICKPLOT2.
NOTE: The data set WORK.TICKPLOT2 has 5 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(PYRAMID):   *--- relocate over-climbed grades ---;
MPRINT(PYRAMID):   data tickplot3;
MPRINT(PYRAMID):   set tickplot2;
MPRINT(PYRAMID):   retain carry 0;
MPRINT(PYRAMID):   if y = 4 then do;
MPRINT(PYRAMID):   if count > 1 then do;
MPRINT(PYRAMID):   carry = count - 1;
MPRINT(PYRAMID):   count = 1;
MPRINT(PYRAMID):   end;
MPRINT(PYRAMID):   end;
MPRINT(PYRAMID):   else if y = 3 then do;
MPRINT(PYRAMID):   count = count + carry;
MPRINT(PYRAMID):   if count > 2 then do;
MPRINT(PYRAMID):   carry = count - 2;
MPRINT(PYRAMID):   count = 2;
MPRINT(PYRAMID):   end;
MPRINT(PYRAMID):   end;
17                                                         The SAS System                          12:53 Wednesday, January 10, 2018

MPRINT(PYRAMID):   else if y = 2 then do;
MPRINT(PYRAMID):   count = count + carry;
MPRINT(PYRAMID):   if count > 4 then do;
MPRINT(PYRAMID):   carry = count - 4;
MPRINT(PYRAMID):   count = 4;
MPRINT(PYRAMID):   end;
MPRINT(PYRAMID):   end;
MPRINT(PYRAMID):   else if y = 1 then do;
MPRINT(PYRAMID):   count = count + carry;
MPRINT(PYRAMID):   if count > 8 then do;
MPRINT(PYRAMID):   carry = count - 8;
MPRINT(PYRAMID):   count = 8;
MPRINT(PYRAMID):   end;
MPRINT(PYRAMID):   end;
MPRINT(PYRAMID):   run;

NOTE: There were 5 observations read from the data set WORK.TICKPLOT2.
NOTE: The data set WORK.TICKPLOT3 has 5 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(PYRAMID):   *--- place ticks over outline ---;
MPRINT(PYRAMID):   data tickplot4;
MPRINT(PYRAMID):   set tickplot3;
MPRINT(PYRAMID):   if count > 0 then do;
MPRINT(PYRAMID):   if mod(count,2) = 0 then do;
MPRINT(PYRAMID):   start = -1*count/2 + 0.5;
MPRINT(PYRAMID):   end = -1*start;
MPRINT(PYRAMID):   end;
MPRINT(PYRAMID):   else if mod(count,2) = 1 then do;
MPRINT(PYRAMID):   start = -1*count/2;
MPRINT(PYRAMID):   end = -1*start - 1;
MPRINT(PYRAMID):   end;
MPRINT(PYRAMID):   if y = 4 then do;
MPRINT(PYRAMID):   start = 0;
MPRINT(PYRAMID):   end = 0;
MPRINT(PYRAMID):   end;
MPRINT(PYRAMID):   do xt = start to end;
MPRINT(PYRAMID):   output;
MPRINT(PYRAMID):   end;
MPRINT(PYRAMID):   end;
MPRINT(PYRAMID):   run;

NOTE: There were 5 observations read from the data set WORK.TICKPLOT3.
NOTE: The data set WORK.TICKPLOT4 has 16 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(PYRAMID):   *--- plot outline and ticks ---;
MPRINT(PYRAMID):   data plotdata;
MPRINT(PYRAMID):   set outline tickplot4;
MPRINT(PYRAMID):   run;

NOTE: There were 15 observations read from the data set WORK.OUTLINE.
18                                                         The SAS System                          12:53 Wednesday, January 10, 2018

NOTE: There were 16 observations read from the data set WORK.TICKPLOT4.
NOTE: The data set WORK.PLOTDATA has 31 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(PYRAMID):   ods graphics / reset=all width=6in height=2.75in;
MPRINT(PYRAMID):   ods listing gpath = "H:\GitHub\srosanba\pyramid";
MPRINT(PYRAMID):   ods graphics / imagename = "pyr11b";
MPRINT(PYRAMID):   proc sgplot data=plotdata noautolegend;
MPRINT(PYRAMID):   scatter x=xo y=y / markerattrs=(symbol=square size=50);
MPRINT(PYRAMID):   scatter x=xt y=y / markerattrs=(symbol=squarefilled size=40 color=green);
MPRINT(PYRAMID):   yaxis display=(nolabel) integer;
MPRINT(PYRAMID):   xaxis display=none;
MPRINT(PYRAMID):   run;

NOTE: PROCEDURE SGPLOT used (Total process time):
      real time           0.32 seconds
      cpu time            0.04 seconds
      
NOTE: Listing image output written to H:\GitHub\srosanba\pyramid\pyr11b.png.
NOTE: There were 31 observations read from the data set WORK.PLOTDATA.

261        ods pdf close;
NOTE: ODS PDF printed 1 page to H:\GitHub\srosanba\pyramid\pyramids.pdf.
NOTE: SAS Institute Inc., SAS Campus Drive, Cary, NC USA 27513-2414
NOTE: The SAS System used:
      real time           3.57 seconds
      cpu time            0.95 seconds
      
